{"version":3,"sources":["Components/soundFiles.js","logo.svg","soundfiles/Chert21.mp3","soundfiles/Esker21.mp3","soundfiles/Feldspar21.mp3","soundfiles/Gabbro21.mp3","soundfiles/Prisoner21.mp3","soundfiles/Riebek21.mp3","soundfiles/Solanum21.mp3","soundfiles/campfire.mp3","soundfiles/giantsdeep.mp3","soundfiles/crickets.mp3","Components/UIElements.js","App.js","reportWebVitals.js","index.js"],"names":["sound1","sound2","sound3","sound4","sound5","sound6","sound7","sound8","sound9","sound10","Howl","src","Chert21","loop","Esker21","Feldspar21","Gabbro21","Prisoner21","Riebek21","Solanum21","campfire","rain","nature","soundArray","handleSync","currentSound","playing","stop","i","length","seek","play","selectedArray","handleStack","state","background","push","filter","item","SoundButton","label","value","onChange","idString","classNameString","className","id","type","checked","Attributes","href","target","App","React","useState","checkedChert","setCheckedChert","checkedEsker","setCheckedEsker","checkedFeldspar","setCheckedFeldspar","checkedGabbro","setCheckedGabbro","checkedPrisoner","setCheckedPrisoner","checkedRiebek","setCheckedRiebek","checkedSolanum","setCheckedSolanum","checkedFire","setCheckedFire","checkedRain","setCheckedRain","checkedCrickets","setCheckedCrickets","pause","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30c2ef61.chunk.js","sourcesContent":["import React from 'react';\r\nimport App from \"../App\";\r\n\r\n\r\n// Imports the sound files\r\n\r\nimport Chert21 from \"../soundfiles/Chert21.mp3\";\r\nimport Esker21 from \"../soundfiles/Esker21.mp3\";\r\nimport Feldspar21 from \"../soundfiles/Feldspar21.mp3\";\r\nimport Gabbro21 from \"../soundfiles/Gabbro21.mp3\";\r\nimport Prisoner21 from \"../soundfiles/Prisoner21.mp3\";\r\nimport Riebek21 from \"../soundfiles/Riebek21.mp3\";\r\nimport Solanum21 from \"../soundfiles/Solanum21.mp3\";\r\n\r\n// and the ambience files\r\n\r\nimport campfire from \"../soundfiles/campfire.mp3\";\r\nimport rain from \"../soundfiles/giantsdeep.mp3\"\r\nimport nature from \"../soundfiles/crickets.mp3\"\r\nimport {Howl} from \"howler\";\r\n\r\n// Initializes the sound files to be used\r\n\r\nlet sound1;\r\nsound1 = new Howl({\r\n    src: [Chert21], loop: true});\r\nlet sound2;\r\nsound2 = new Howl({\r\n    src: [Esker21], loop: true});\r\nlet sound3;\r\nsound3 = new Howl({\r\n    src: [Feldspar21], loop: true});\r\nlet sound4;\r\nsound4 = new Howl({\r\n    src: [Gabbro21], loop: true});\r\nlet sound5;\r\nsound5 = new Howl({\r\n    src: [Prisoner21], loop: true});\r\nlet sound6;\r\nsound6 = new Howl({\r\n    src: [Riebek21], loop: true});\r\nlet sound7;\r\nsound7 = new Howl({\r\n    src: [Solanum21], loop: true});\r\n\r\n\r\n// don't forget ambience!\r\n\r\nlet sound8;\r\nsound8 = new Howl({\r\n    src: [campfire], loop: true});\r\nlet sound9;\r\nsound9 = new Howl({\r\n    src: [rain], loop: true});\r\nlet sound10;\r\nsound10 = new Howl({\r\n    src: [nature], loop: true});\r\n\r\n\r\n// Creates an array of the sound objects, this way they can be iterated through in handleSync.\r\n// Does not include the ambient sounds, this introduced a bug with sounds not starting.\r\n\r\nconst soundArray = [sound1, sound2, sound3, sound4, sound5, sound6, sound7];\r\n\r\n// Handles playing/pausing for traveler's instruments.\r\n// Basically checks if the sound is playing, stops it, if not it will\r\n// check if any other instruments are playing to get their position and\r\n// play at that position.\r\n\r\nfunction handleSync(currentSound){\r\n    if (currentSound.playing()){\r\n        currentSound.stop();\r\n    }\r\n    else{\r\n        for(let i = 0; i < soundArray.length; i++) {\r\n            if (soundArray[i].playing()) {\r\n                currentSound.seek(soundArray[i].seek());\r\n                currentSound.play();\r\n                return;\r\n            }\r\n        }\r\n        currentSound.play();\r\n    }\r\n}\r\n\r\n// Do not know if there's a better way to export than to just, list them all out.\r\n\r\nexport {sound1, sound2, sound3, sound4, sound5, sound6, sound7, sound8, sound9, sound10,\r\n        handleSync, }\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/Chert21.63b564e7.mp3\";","export default __webpack_public_path__ + \"static/media/Esker21.4c7bd129.mp3\";","export default __webpack_public_path__ + \"static/media/Feldspar21.12043d13.mp3\";","export default __webpack_public_path__ + \"static/media/Gabbro21.a51e1c58.mp3\";","export default __webpack_public_path__ + \"static/media/Prisoner21.a8fb6ab1.mp3\";","export default __webpack_public_path__ + \"static/media/Riebek21.ce044a4c.mp3\";","export default __webpack_public_path__ + \"static/media/Solanum21.226048e7.mp3\";","export default __webpack_public_path__ + \"static/media/campfire.44baeb5a.mp3\";","export default __webpack_public_path__ + \"static/media/giantsdeep.58634b15.mp3\";","export default __webpack_public_path__ + \"static/media/crickets.666155eb.mp3\";","import React from 'react';\r\nimport App from \"../App\";\r\nimport '../App.css';\r\n\r\n// stack to push/pop new backgrounds to. classname of background div is set to the top of the stack.\r\n// by default, will have only the default background in the stack.\r\n\r\nvar selectedArray = [\"backgroundDefault\"];\r\n\r\n\r\n// Function to get last element from the stack, the background div will set this function\r\n// as it's classname.\r\n\r\nfunction getBackground() {\r\n    return selectedArray[selectedArray.length - 1]}\r\n\r\n\r\n// Handles pushing and removing from the arrayselected stack.\r\n// Takes in a state to check and a background string to push onto the stack\r\n\r\nfunction handleStack(state, background){\r\n    if(!state === true){\r\n        selectedArray.push(background);\r\n    }\r\n    else{\r\n        selectedArray = selectedArray.filter(function(item) {\r\n            return (item !== background)})\r\n    }\r\n}\r\n\r\n// Creates a checkmark component with a label and value and... it's the buttons!\r\n\r\nconst SoundButton = ({label, value, onChange, idString, classNameString})  => {\r\n    return (\r\n        <div className={classNameString} id={idString}>\r\n        <label>\r\n            <input type=\"checkbox\" checked={value} onChange={onChange} />\r\n            {label}\r\n        </label>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// Carries the info for who contributed to the website.\r\n\r\n// I will also say, huge thank you to Meli-Luminati! Their art really\r\n// Makes this website look and feel so good.\r\n\r\nconst Attributes = () => {\r\n    return (\r\n        <div className = \"info\">\r\n            Project by ThrowawayHeights, Art used with permission from Meli-luminati\r\n            <div>\r\n                <a href=\"https://meliluminati.carrd.co/\" target=\"_blank\">Meli-luminati Website</a>\r\n                <span> , </span>\r\n                <a href=\"https://www.instagram.com/meli.luminati/?hl=en\" target=\"_blank\"> Instagram</a>\r\n\r\n                <span> , </span>\r\n                <a href=\"https://twitter.com/meliluminati\" target=\"_blank\"> Twitter</a>\r\n                <span> , </span>\r\n                <a href=\"https://www.reddit.com/user/Meli-luminati/\" target=\"_blank\"> Reddit</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport {getBackground, handleStack, SoundButton, Attributes};\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport {Howl, Howler} from \"howler\";\nimport {RangeStepInput} from 'react-range-step-input';\nimport ReactDOM from \"react-dom\";\n\n// Above imports the necessary libraries and packages, although howler doesn't seem to be used.\n\n\n\n// Imports the sound files from soundFiles.js\n\nimport {sound1, sound2, sound3, sound4, sound5, sound6, sound7,\n        sound8, sound9, sound10, handleSync} from \"./Components/soundFiles\";\n\n// Imports the ui elements, like attributes, buttons, and handling the stack\n\nimport {Attributes, getBackground, handleStack, SoundButton} from \"./Components/UIElements\";\n\n\n\n\n// The app!\n\nfunction App() {\n    // create the states for check boxes, by default checkboxes will be unchecked, or \"false\"\n    const [checkedChert, setCheckedChert] = React.useState(false);\n    const [checkedEsker, setCheckedEsker] = React.useState(false);\n    const [checkedFeldspar, setCheckedFeldspar] = React.useState(false);\n    const [checkedGabbro, setCheckedGabbro] = React.useState(false);\n    const [checkedPrisoner, setCheckedPrisoner] = React.useState(false);\n    const [checkedRiebek, setCheckedRiebek] = React.useState(false);\n    const [checkedSolanum, setCheckedSolanum] = React.useState(false);\n    const [checkedFire, setCheckedFire] = React.useState(false);\n    const [checkedRain, setCheckedRain] = React.useState(false);\n    const [checkedCrickets, setCheckedCrickets] = React.useState(false);\n\n    // Massive wall of text for handling audio sync between each instrument.\n    // Will refactor this later to be less spaghetti code-y, but right now it works and\n    // it's 2 am and I'm tired.\n    // UPDATE! It is refactored! No longer 700 lines of code!\n\n\n    const handleChangeChert = () => {\n        setCheckedChert(!checkedChert);\n        handleSync(sound1);\n        handleStack(checkedChert, \"backgroundChert\")\n    };\n\n    const handleChangeEsker = () => {\n        setCheckedEsker(!checkedEsker);\n        handleSync(sound2);\n        handleStack(checkedEsker, \"backgroundEsker\")\n    };\n\n    const handleChangeFeldspar = () => {\n        setCheckedFeldspar(!checkedFeldspar);\n        handleSync(sound3);\n        handleStack(checkedFeldspar, \"backgroundFeldspar\")\n    };\n\n    const handleChangeGabbro = () => {\n        setCheckedGabbro(!checkedGabbro);\n        handleSync(sound4);\n        handleStack(checkedGabbro, \"backgroundGabbro\")\n    };\n\n    const handleChangePrisoner = () => {\n        setCheckedPrisoner(!checkedPrisoner);\n        handleSync(sound5);\n        handleStack(checkedPrisoner, \"backgroundPrisoner\")\n    };\n\n    const handleChangeRiebek = () => {\n        setCheckedRiebek(!checkedRiebek);\n        handleSync(sound6);\n        handleStack(checkedRiebek, \"backgroundRiebek\")\n    };\n\n    const handleChangeSolanum = () => {\n        setCheckedSolanum(!checkedSolanum);\n        handleSync(sound7);\n        handleStack(checkedSolanum, \"backgroundSolanum\")\n    }\n\n    // ambience files here, these will just be treated like normal sounds, not\n    // synced instruments\n\n    const handleChangeFire = () => {\n        setCheckedFire(!checkedFire);\n        sound8.playing() ? sound8.pause() : sound8.play();\n    }\n\n    const handleChangeRain = () => {\n        setCheckedRain(!checkedRain);\n        sound9.playing() ? sound9.pause() : sound9.play();\n    }\n\n    const handleChangeCrickets = () => {\n        setCheckedCrickets(!checkedCrickets);\n        sound10.playing() ? sound10.pause() : sound10.play();\n    }\n\n\n    return (\n        // whole-div covers the entire flex-grid for the buttons\n        // flexdiv just covers the buttons inside the flex-grid\n        // SoundButtons are each clickable checkboxes to toggle sound on/off\n        // getBackground renders the background images. Not sure why it works here but not in UIElements\n        // Attributes shows who contributed to the website and their credits.\n        <div className=\"whole-div\">\n            <div className=\"FlexDiv\">\n\n                <SoundButton\n                    label=\"Chert\"\n                    value={checkedChert}\n                    onChange={handleChangeChert}\n                    idString=\"top\"\n                    classNameString=\"Checkbox\"/>\n\n\n                <SoundButton\n                    label=\"Esker\"\n                    value={checkedEsker}\n                    onChange={handleChangeEsker}\n                    idString=\"\"\n                    classNameString=\"Checkbox\"/>\n\n                <SoundButton\n                    label=\"Feldspar\"\n                    value={checkedFeldspar}\n                    onChange={handleChangeFeldspar}\n                    idString=\"\"\n                    classNameString=\"Checkbox\"/>\n\n                <SoundButton\n                    label=\"Gabbro\"\n                    value={checkedGabbro}\n                    onChange={handleChangeGabbro}\n                    idString=\"\"\n                    classNameString=\"Checkbox\"/>\n\n                <SoundButton\n                    label=\"Riebek\"\n                    value={checkedRiebek}\n                    onChange={handleChangeRiebek}\n                    idString=\"\"\n                    classNameString=\"Checkbox\"/>\n\n\n                <SoundButton\n                    label=\"Prisoner\"\n                    value={checkedPrisoner}\n                    onChange={handleChangePrisoner}\n                    idString=\"\"\n                    classNameString=\"Checkbox\"/>\n\n                <SoundButton\n                    label=\"Solanum\"\n                    value={checkedSolanum}\n                    onChange={handleChangeSolanum}\n                    idString=\"bottom\"\n                    classNameString=\"Checkbox\"/>\n\n                <SoundButton\n                    label=\"Fire\"\n                    value={checkedFire}\n                    onChange={handleChangeFire}\n                    idString=\"topAmbience\"\n                    classNameString=\"CheckboxAmbience\"/>\n\n\n                <SoundButton\n                    label=\"Rain\"\n                    value={checkedRain}\n                    onChange={handleChangeRain}\n                    idString=\"middleAmbience\"\n                    classNameString=\"CheckboxAmbience\"/>\n\n                <SoundButton\n                    label=\"Crickets\"\n                    value={checkedCrickets}\n                    onChange={handleChangeCrickets}\n                    idString=\"bottomAmbience\"\n                    classNameString=\"CheckboxAmbience\"/>\n\n            </div>,\n            <div id={getBackground()} className=\"background\"></div>,\n            <Attributes/>\n        </div>\n\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}